log4j.rootLogger=DEBUG,toConsole,toFile
#优先级 高-低
#ERROR - WARN - INFO - DEBUG
#输出到控制台
log4j.appender.toConsole=org.apache.log4j.ConsoleAppender
#最低日志输出级别，即只输出包含ERROR在内的更高的级别的日志信息
log4j.appender.toConsole.Threshold=ALL
#日志输出到控制台使用的对象		
log4j.appender.toConsole.Target=System.out
#日志信息格式
log4j.appender.toConsole.layout=org.apache.log4j.PatternLayout
#PatternLayout的默认日志信息格式
log4j.appender.toConsole.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,S} %5p (%c:%L) - %m%n

#输出到文件 --隔天生成一个当前的日志文件
log4j.appender.toFile=org.apache.log4j.DailyRollingFileAppender
#最低日志输出级别，即只输出包含ERROR在内的更高的级别的日志信息
log4j.appender.toFile.Threshold=ALL
#是否将日志信息覆盖掉指定的文件中的内容 默认为true，表示将日志信息追加至指定文件中，false将导致覆盖
log4j.appender.toFile.Append=true
#日志输出到的文件，且该文件之存储ERROR级别以上的日志信息
log4j.appender.toFile.File=../logs/log_
#配置日期格式 注意:系统时间的变化将导致日志文件的产生
log4j.appender.toFile.DatePattern=yyyy-MM-dd'.log'
#日志信息格式
log4j.appender.toFile.layout=org.apache.log4j.PatternLayout
#PatternLayout的默认日志信息格式
log4j.appender.toFile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,S} %5p (%c:%L) - %m%n

log4j.logger.org.apache.commons=INFO
log4j.logger.org.springframework=INFO
log4j.logger.org.apache.struts=INFO
log4j.logger.com.opensymphony.xwork2=INFO
log4j.logger.org.apache.struts2=INFO